
type Notification {
    notifications_id: ID!
    customer_id: ID!
    notification_type_id: ID!
    message: String
    sent_at: DateTime
    status_id: ID!
    retry_count: String
    created_at: DateTime!
    updated_at: DateTime!
}

input NotificationCreateInput {
    customer_id: ID!
    notification_type_id: ID!
    message: String
    sent_at: DateTime
    status_id: ID!
    retry_count: String
}

input NotificationUpdateInput {
    customer_id: ID
    notification_type_id: ID
    message: String
    sent_at: DateTime
    status_id: ID
    retry_count: String
}

extend type Query {
  notifications: [Notification!]! @all(model: "App\\Models\\Notification\\Notification")
  notification(notification_id: ID! @eq): Notification @find(model: "App\\Models\\Notification\\Notification")
  notificationNotificationType(notification_type_id: ID! @eq): [Notification!]! @all(model: "App\\Models\\Notification\\Notification")
  notificatioNotificationStatus(status_id: ID! @eq): [Notification!]! @all(model: "App\\Models\\Notification\\Notification")
}

extend type Mutation {
  createNotification(input: NotificationCreateInput! @spread): Notification
    @create(model: "App\\Models\\Notification\\Notification")
  
  updateNotification(
    notifications_id: ID! @eq(key: "notifications_id"),
    input: NotificationUpdateInput! @spread
  ): Notification @update(model: "App\\Models\\Notification\\Notification")

  deleteNotification(notifications_id: ID! @eq(key: "notifications_id")): Notification
    @delete(model: "App\\Models\\Notification\\Notification")
}
