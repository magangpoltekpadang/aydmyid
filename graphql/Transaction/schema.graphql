type Transaction {
  transaction_id: ID!
  transaction_code: String!
  customer_id: ID!
  outlet_id: ID!
  transaction_date: DateTime!
  subtotal: Float!
  discount: Float!
  tax: Float!
  final_price: Float!
  payment_status_id: ID!
  gate_opened: Boolean!
  staff_id: ID!
  shift_id: ID!
  receipt_printed: Boolean!
  whatsapp_sent: Boolean!
  notes: String
  created_at: DateTime!
  updated_at: DateTime!
}

input TransactionCreateInput {
  transaction_code: String!
  customer_id: ID!
  outlet_id: ID!
  transaction_date: DateTime
  subtotal: Float
  discount: Float
  tax: Float
  final_price: Float
  payment_status_id: ID!
  gate_opened: Boolean
  staff_id: ID!
  shift_id: ID!
  receipt_printed: Boolean
  whatsapp_sent: Boolean
  notes: String
}

input TransactionUpdateInput {
  transaction_code: String
  customer_id: ID
  outlet_id: ID
  transaction_date: DateTime
  subtotal: Float
  discount: Float
  tax: Float
  final_price: Float
  payment_status_id: ID
  gate_opened: Boolean
  staff_id: ID
  shift_id: ID
  receipt_printed: Boolean
  whatsapp_sent: Boolean
  notes: String
}

extend type Query {
  transactions: [Transaction!]!@all(model: "App\\Models\\Transaction\\Transaction")
  transaction(transaction_id: ID! @eq): Transaction @find(model: "App\\Models\\Transaction\\Transaction")
  customerTransaction(customer_id: ID! @eq): [Staff!]! @all(model: "App\\Models\\Transaction\\Transaction")
  outletTransaction(outlet_id: ID! @eq): [Staff!]! @all(model: "App\\Models\\Transaction\\Transaction")
  paymentstatusTransaction(payment_status_idd: ID! @eq): [Staff!]! @all(model: "App\\Models\\Transaction\\Transaction")
  staffTransaction(staff_id: ID! @eq): [Staff!]! @all(model: "App\\Models\\Transaction\\Transaction")
  shiftTransaction(shift_id: ID! @eq): [Staff!]! @all(model: "App\\Models\\Transaction\\Transaction")
}

extend type Mutation {
  createTransaction(input: TransactionCreateInput! @spread): Transaction
    @create(model: "App\\Models\\Transaction\\Transaction")

  updateTransaction(
    transaction_id: ID! @eq(key: "transaction_id"),
    input: TransactionUpdateInput! @spread
  ): Transaction
    @update(model: "App\\Models\\Transaction\\Transaction")

  deleteTransaction(transaction_id: ID! @eq(key: "transaction_id")): Transaction
    @delete(model: "App\\Models\\Transaction\\Transaction")
}